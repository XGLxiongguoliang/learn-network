server:
  port: 8800

spring:
  main:
    allow-circular-references: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    url: jdbc:mysql://8.140.139.185:3306/network?characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
  mvc:
    view:
      prefix: classpath:/templates/
      suffix: .html
    static-path-pattern: /**
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
  thymeleaf:
    mode: HTML
    prefix: classpath:/templates/
  web:
    resources:
      static-locations: classpath:/static/
  kafka:
    producer:
      # 发生错误后，消息重发的次数。
      retries: 0
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
      bootstrap-servers: 8.140.139.185:9092
    consumer:
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 1S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      # 当enable-auto-commit为false时生效
      #listener:
        ## 手动提交ack offset模式
        #ack-mode: manual_immediate
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      bootstrap-servers: 8.140.139.185:9092
  redis:
    host: 8.140.139.185
    port: 6379
    password: 12345
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        min-idle: 0
    jedis:
      pool:
        min-idle: 0
    timeout: 30000
    database: 0
  servlet:
    multipart:
      # maxFileSize 单个数据大小
      maxFileSize: 10MB
      # maxRequestSize 是总数据大小
      maxRequestSize: 1024MB
mybatis:
  mapper-locations: classpath:mapping/*Mapper.xml
  type-aliases-package: com.example.network.domain
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#配置日志
logging:
  level:
    #不同目录下的日志可配置不同级别
    org.springfromework.web: INFO
    org.hibernate: ERROR
  #采用相对路径方式将日志文件输出到【log/myspringboot.log】
  fileUrl: log/myspringboot.log
  #采用绝对路径方式将日志文件输出到【/Users/wang/Downloads/myspringboot.log】
  #file: /Users/wang/Downloads/myspringboot.log

pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql

